[project]
name = "research-mcp"
version = "0.1.0"
description = "A MCP server project"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiosqlite>=0.20.0",
    "async-lru>=2.0.4",
    "braintrust>=0.0.173",
    "cachier>=3.1.2",
    "clean-text[gpl]>=0.6.0",
    "dspy>=2.5.40",
    "exa-py>=1.7.0",
    "fastapi>=0.115.5",
    "httpx>=0.27.2",
    "mcp>=1.0.0",
    "pip>=24.3.1",
    "python-dotenv>=1.0.1",
    "python-multipart>=0.0.17",
    "rich>=13.9.4",
    "sqlalchemy[asyncio]>=2.0.36",
    "stackprinter>=0.2.12",
    "uvicorn>=0.32.1",
    "uvloop>=0.21.0",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]


[[project.authors]]
name = "Darin"
email = "86675935+darinkishore@users.noreply.github.com"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
research-mcp = "research_mcp:main"

[tool.ruff]
# Target Python 3.12
target-version = "py312"

# Line length of 100 characters
line-length = 100


[tool.ruff.lint]
preview = true
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "SIM",  # flake8-simplify
    "RUF",  # Ruff-specific rules
    "PL",   # pylint
    "PLR",
    "PLE",
    "PLW",
    "PT",   # pytest
    "PTH",  # use pathlib
    "C4",   # comprehensions
    "ICN",  # import conventions
    "PD",   # pandas-vet
    "PIE",  # misc. lints
    "TID",  # type checking imports (replacement for TCH)
    "T20",  # type checking
    "FURB", # refurb
    "PERF", # performance
    "FAST", # fastapi
] # Enable select rules

# Ignore specific rules
extend-ignore = [
    "B008",    # Do not perform function calls in argument defaults
    "T201",    # print
    "RUF029",
    "E501",
    "PLW0603",
    "PLR2004",
    "PLC0415",
]


[tool.ruff.format]
quote-style = "single"
preview = true

[tool.ruff.isort]
lines-after-imports = 2
combine-as-imports = true
known-first-party = ["research_mcp"]

[dependency-groups]
dev = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "righttyper",
    "scalene>=1.5.48",
    "memray>=1.11.0",         # Memory profiling
    "pyinstrument>=4.6.2",    # CPU profiling
    "vulture>=2.11",          # Find dead code
]
